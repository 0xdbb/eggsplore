{
    "swagger": "2.0",
    "info": {
        "description": "API documentation for the eggsplore game",
        "title": "Eggsplore API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login account with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login Account",
                "parameters": [
                    {
                        "description": "Account Login Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server.AccountLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_server.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logout account by deleting session and clearing cookies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout Account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_server.Message"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register account with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register Account",
                "parameters": [
                    {
                        "description": "Account Login Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server.RegisterAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_server.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/renew": {
            "post": {
                "description": "Generates a new access token using a valid refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Renew Access Token",
                "parameters": [
                    {
                        "description": "Refresh Token Request",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/internal_server.renewAccessTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_server.renewAccessTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized or Invalid token",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Session not found",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/game/eggs": {
            "get": {
                "description": "Get all eggs belonging to a player",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Get Player Eggs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player ID",
                        "name": "player_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_server.GetEggsByPlayerResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Player drops an egg (adds to inventory + eggs table)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Drop Egg",
                "parameters": [
                    {
                        "description": "Drop Egg Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_server.DropEggRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_server.DropEggResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/game/inventory": {
            "get": {
                "description": "Get all inventory items (tools, eggs, boosts) belonging to a player",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Get Player Inventory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player ID",
                        "name": "player_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_server.Inventory"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/game/player": {
            "get": {
                "description": "Get player stats by account id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Get Player Stats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_server.Players"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/game/tools": {
            "get": {
                "description": "Get all tools belonging to a player",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Get Player Tools",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player ID",
                        "name": "player_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_server.GetToolsByPlayerResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_server.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_server.AccountLoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "password123{#Pbb"
                }
            }
        },
        "internal_server.DropEggRequest": {
            "type": "object",
            "required": [
                "lat",
                "lon",
                "player_id",
                "type"
            ],
            "properties": {
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                },
                "message": {
                    "type": "string"
                },
                "player_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "BUNNY",
                        "GOLDEN",
                        "LEGENDARY"
                    ]
                }
            }
        },
        "internal_server.DropEggResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "inventory_id": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "internal_server.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_server.GetEggsByPlayerResponse": {
            "type": "object",
            "properties": {
                "collected_at": {
                    "type": "string"
                },
                "hatched": {
                    "type": "boolean"
                },
                "inventory_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "internal_server.GetToolsByPlayerResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "durability": {
                    "type": "integer"
                },
                "equipped": {
                    "type": "boolean"
                },
                "inventory_id": {
                    "type": "string"
                }
            }
        },
        "internal_server.Inventory": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "item_type": {
                    "type": "string"
                },
                "player_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "internal_server.Message": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "error": {
                    "type": "string",
                    "example": "Failed to Process Task"
                },
                "message": {
                    "type": "string",
                    "example": "Task status updated - COMPLETED"
                },
                "result": {
                    "type": "string",
                    "example": "Task processed successfully"
                },
                "task_id": {
                    "type": "string",
                    "example": "1233-flf4djf-alsdik"
                }
            }
        },
        "internal_server.Players": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "coins": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "settings": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "xp": {
                    "type": "integer"
                }
            }
        },
        "internal_server.RegisterAccountRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "password123{#Pbb"
                },
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3,
                    "example": "John_doe11"
                }
            }
        },
        "internal_server.renewAccessTokenRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "internal_server.renewAccessTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "access_token_expires_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}