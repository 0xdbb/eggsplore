basePath: /api/v1
definitions:
  internal_server.AccountLoginRequest:
    properties:
      email:
        example: john.doe@example.com
        type: string
      password:
        example: password123{#Pbb
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  internal_server.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      status:
        type: string
    type: object
  internal_server.Message:
    properties:
      code:
        example: 500
        type: integer
      error:
        example: Failed to Process Task
        type: string
      message:
        example: Task status updated - COMPLETED
        type: string
      result:
        example: Task processed successfully
        type: string
      task_id:
        example: 1233-flf4djf-alsdik
        type: string
    type: object
  internal_server.RegisterAccountRequest:
    properties:
      email:
        example: john.doe@example.com
        type: string
      first_name:
        example: John
        maxLength: 30
        minLength: 2
        type: string
      last_name:
        example: Doe
        maxLength: 30
        minLength: 2
        type: string
      password:
        example: password123{#Pbb
        minLength: 8
        type: string
      username:
        example: John_doe11
        maxLength: 30
        minLength: 3
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  internal_server.renewAccessTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  internal_server.renewAccessTokenResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
    type: object
info:
  contact: {}
  description: API documentation for the eggsplore game
  title: Eggsplore API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login account with email and password
      parameters:
      - description: Account Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_server.AccountLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_server.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_server.ErrorResponse'
      summary: Login Account
      tags:
      - auth
  /auth/logout:
    post:
      description: Logout account by deleting session and clearing cookies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_server.Message'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_server.ErrorResponse'
      summary: Logout Account
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register account with email and password
      parameters:
      - description: Account Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_server.RegisterAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_server.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_server.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_server.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_server.ErrorResponse'
      summary: Register Account
      tags:
      - auth
  /auth/renew:
    post:
      consumes:
      - application/json
      description: Generates a new access token using a valid refresh token
      parameters:
      - description: Refresh Token Request
        in: body
        name: body
        schema:
          $ref: '#/definitions/internal_server.renewAccessTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_server.renewAccessTokenResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/internal_server.ErrorResponse'
        "401":
          description: Unauthorized or Invalid token
          schema:
            $ref: '#/definitions/internal_server.ErrorResponse'
        "404":
          description: Session not found
          schema:
            $ref: '#/definitions/internal_server.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/internal_server.ErrorResponse'
      summary: Renew Access Token
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
